#!/usr/bin/env bash

clean_history() {
  local exit_status=$?
  # If the exit status was 127, the command was not found. Let's remove it from history
  local number=$(history | tail -n 1 | awk '{print $1}')
  if [ -n "$number" ]; then
      if [ $exit_status -eq 127 ] && ([ -z $HISTLASTENTRY ] || [ $HISTLASTENTRY -lt $number ]); then
          history -d $number
      else
          HISTLASTENTRY=$number
      fi
  fi
}

find_git_branch() {
  # Based on: http://stackoverflow.com/a/13003854/170413
  local status=$(git status --porcelain 2> /dev/null)
  local branch
  if branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null); then
    if [[ "$branch" == "HEAD" ]]; then
        branch='detached*'
    fi
    if [[ "$status" != "" ]]; then
        git_branch="($branch*)"
    else
        git_branch="($branch)"
    fi
  else
    git_branch=""
  fi
}

find_elixir_files() {
    find . \
        -not \( -path "./deps/*" -prune \) \
        -not \( -path "./.git/*" -prune \) \
        -not \( -path "./.elixir_ls/*" -prune \) \
        -not \( -path "./docker/*" -prune \) \
        -name '*.ex' -o \
        -name '*.exs' -o \
        -name '*.eex'
}

elixir_test() {
  if [[ $# -eq 0 ]] ; then
      find_elixir_files | entr mix test
  else
      find_elixir_files | entr mix test $@
  fi
}

elixir_credo() {
  find_elixir_files | entr mix credo $@
}

elixir_dialyze() {
  find_elixir_files | entr mix dialyzer --format dialyxir $@
}

set_window_title() {
    printf -v title '%s' "$*"
    trap 'echo -ne "\e]0;${title}\007"' DEBUG
}
